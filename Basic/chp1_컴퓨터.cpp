// ● 컴퓨터
	// 1. 컴퓨터 정의 : 계산하는 기계
		// - 계산 : 전자 회로 이용 = 하나의 트랜지스터 = 소형 전자 스위치 역할 = 이진수 = 기계어
		// - 데이터는 숫자로 표시되어야 한다 >> 디지털 형태

		// 1) 데이터 표현 분류
			// (1) 디지털 : 모든 데이터 >> 숫자 형태로 표시
				// - 목적 : 데이터 표현, 처리, 저장, 전송
			// (2) 아날로그 : 모든 데이터 >> 연속적 값으로 표시

		// 2) 데이터 단위
			// 1) 이진수 : 0(열린 것)과 1(닫힌 것)
			// 2) 비트 : 이진수의 하나 자리수
			// 3) 바이트 : 비트 x 8
			// 4) 워드 : 바이트 x 4

	// 2. 컴퓨터 구성요소
		// 컴퓨터
			// 1) 하드웨어
				// (1) 중앙처리장치 : CPU
				// (2) 메인메모리 : 램
				// (3) 보조기억장치 : USB, SSD, 하드디스크
				// (4) 입력장치 : 키보드, 마우스
				// (5) 출력장치 : 모니터
			// 2) 소프트웨어
				// (1) 시스템 소프트웨어 : 운영체제, 컴파일러, 어셈블러, 링커, 로더, 프로그래밍 도구 등
				// (2) 응용 소프트웨어 : 워드 프로세서, 스프레드시트, 그래픽 프로그램, 미디어 재생기 등
					// - 컴퓨터를 범용 기계로 만들기 위해 사용자가 프로그램 별도 설치하도록 만듦

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

// ●프로그래밍 언어
	// 1. 프로그래밍 언어 역할 : 프로그래밍 언어 >> 컴파일러(통역) >> 기계어

	// 2. 프로그래밍 언어 분류
		// 1) 기계어 : 이진수로 표기
		// 2) 어셈블리어 : 영어 약자 기호로 표기
			// - 어셈블러 : 영어 약자 기호(기계어 보다 높은 수준) >> 이진수 변환
		// 3) 고급 언어 : 고급 언어 문장으로 표기. 독립적으로 프로그램 작성
			// - 컴파일러 : 고급 언어 문장 >> 기계어 변환
			// - 예시 : C, C++, JAVA, PYTHON, FORTRAN, PASCAL

				// C언어 특징
					// (1) 장점
						// - 간결한 기능, 효율적 메모리 사용
						// - 저수준 프로그래밍, 고수준 프로그래밍 모두 가능
						// - 이식성 : 임베디드 시스템에 주로 사용
					// (2) 단점
						// - 어려움

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

// ● 프로그램
	// 1. 프로그램 역할
		// 작업(아주 자세하고 구체적으로 지정) in 프로그램 >> 컴퓨터

	// 2. 프로그램 작동 순서
		// 데이터 입력 >> 데이터 처리 >> 결과 출력

	// 3. 프로그램 작성 과정
		// 1-전) 에디터 : 소스 코드 작성
			// 1) 소스 파일(test.c) : 소스 코드가 들어있는 텍스트 파일(이것만 있으면 나머지는 아무때나 만들 수 있음)
		// 2-전) 컴파일러 : 소스 파일 >> 기계어 변환
			// 2) 오브젝트 파일(test.obj) : 기계어로 변환된 파일
		// 3-전) 링커 : 오브젝트 파일과 라이브러리 파일들을 연결 >> 하나의 실행 파일 생성
			// 3) 실행 파일(test.exe) : 실행 가능한 파일
		// 4-전) 로더 : 실행파일 불러옴

	// 4. 통합 개발 환경(IDE) : 에디터 + 컴파일러 + 디버거 프로그램

		// 통합 개발 환경 종류 ♣
			// - Visual C++ : 윈도우 기반 응용 프로그램 제작
				// 솔루션 : 하나의 애플리케이션 제작(프로젝트들의 모음)
				// 프로젝트 : 하나의 실행 파일 제작(파일들의 모음)
				// - 파일 < 프로젝트 < 솔루션

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

// ● 알고리즘
	// 1. 알고리즘 정의 : 문제 해결 절차

	// 2. 알고리즘 기술 순서
		// - 최대한 작은 크기의 문제들로 분해하여 생각 및 해결

	// 3. 알고리즘 기술 방법 분류
		// 1. 자연어 like 한국어, 영어 : 인간 언어
		// 2. 순서도 : 논리 순서 GUI 표현. 복잡해지면 기술 힘듦
		// 3. 의사 코드 : 자연어와 순서도 사이 수준의 엄격성. 주로 사용됨